How did viewing a diff between two versions of a file help you see the bug that
was introduced?

Quick pinpoint of position of the spelling error.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Knowing what to erase or what to add when a new bug is found, or when a new idea is conceived.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros: all your commits will make sense based on your own judgment, it'll be much easier to navigate. Cons: you might have failed to commit at a point, which would have been saved automatically. 

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Some files are interrelated where the change in one files reflects a different change in other file e.g. HTML and CSS. However if software deals with predominantly individual files e.g. G Docs then each file would be treated separately.

How can you use the commands git log and git diff to view the history of files?

Use git log to view all commits and git diff to view changes introduced by one commit. This can be done by comparing a particular commit to the one immediately before.

How might using version control make you more confident to make changes that could break something?

You know that you can easily check and identify the change causing something to break, so risks can be taken without fear of losing code. 

Now that you have your workspace set up, what do you want to try using Git for?

Version control for a JavaScript project.
